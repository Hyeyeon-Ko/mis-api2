stages:
  - docker-build
  - docker-push
  - test

variables:
  DOCKER_IMAGE: mis-api
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_HOST: tcp://docker:2375  # DinD 서비스 주소
  DOCKER_TLS_VERIFY: "0"
  DOCKER_CERT_PATH: "/certs/client"
  REGISTRY_URL: $REGISTRY_URL  # GitLab Container Registry URL
  REGISTRY_USER: $REGISTRY_USER  # GitLab 사용자 이름
  REGISTRY_PASSWORD: $REGISTRY_PASSWORD  # Access Token

before_script:
  - chmod +x gradlew  # gradlew에 실행 권한 부여

docker-build:
  stage: docker-build
  image: docker:stable
  services:
    - name: docker:dind
      alias: docker
  script:
    - echo "Docker build start!!"
    - docker login $REGISTRY_URL
    - docker build -t $REGISTRY_URL/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$DOCKER_IMAGE:$CI_COMMIT_REF_NAME .
  tags:
    - mis-runner

docker-push:
  stage: docker-push
  image: docker:stable
  services:
    - name: docker:dind
      alias: docker
  script:
    - echo "Docker push start!"
    - echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin "$REGISTRY_URL"
    - docker push $REGISTRY_URL/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$DOCKER_IMAGE:$CI_COMMIT_REF_NAME
  tags:
    - mis-runner
  dependencies:
    - docker-build

test:
  stage: test
  image: $REGISTRY_URL/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$DOCKER_IMAGE:$CI_COMMIT_REF_NAME
  script:
    - echo "test start!"
    - java -jar app.jar
  tags:
    - mis-runner
  dependencies:
    - docker-build
